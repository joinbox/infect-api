{
  "name": "ee-lru-cache",
  "description": "LRU Memory Cache ( last recent used )",
  "version": "0.1.1",
  "homepage": "https://github.com/eventEmitter/ee-lru-cache",
  "author": {
    "name": "Michael van der Weg",
    "email": "michael@eventemitter.com",
    "url": "http://eventemitter.com/"
  },
  "repository": {
    "url": "https://github.com/eventEmitter/ee-lru-cache"
  },
  "engines": {
    "node": "*"
  },
  "bugs": {
    "url": "https://github.com/eventEmitter/ee-lru-cache/issues"
  },
  "dependencies": {
    "ee-class": "*",
    "ee-event": "*",
    "ee-log": "*"
  },
  "devDependencies": {},
  "optionalDependencies": {},
  "readme": "ee-lru\n======\n\nLRU Memory Cache ( last recent used )\n\n\n\n\n\tvar cahce = new LRUCache( {\n\t\t  limit: 100000  \t// max number of items\n\t\t, ttl: 3600000 \t\t// 1h ( remove items not accessed in the last hour )\n\t} );\n\n\n\n\n\tcache.set( \"someId\", { some: \"data\" } );\n\n\tcache.get( \"someId\" ); // { some: \"data\" }\n\n\tcache.has( \"someId\" ); // true\n\n\tcache.remove( \"someId\" );",
  "readmeFilename": "README.md",
  "_id": "ee-lru-cache@0.1.1",
  "dist": {
    "shasum": "e8827ef07a79c6614f941a80d508aa345c73c30f"
  },
  "_from": "ee-lru-cache@*",
  "_resolved": "https://registry.npmjs.org/ee-lru-cache/-/ee-lru-cache-0.1.1.tgz"
}
